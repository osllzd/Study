# -------------------------------------------------------------------------------
# 자동차 관리 프로그램 만들기
# - 엔진, 연료, 브랜드, 색상, 번호
# - 전진, 후진, 좌회전, 우회전 ,정지
# -------------------------------------------------------------------------------
# engine ='휘발유엔진'
# food = '휘발유'
# maker = '현대'
# color = '흰색'
# number = '123가5678'
#
# def go(): print('전진')
# def back():print('후진')
# def left_go():print('좌회전')
# def right_go():print('우회전')
# def stop():print('정지')
#
# carDict= {'123가5678' : {'engine':'휘발유엔진', 'color' : '흰색','maker' : '현대' },
#           '111가1111' : {'engine':'휘발유엔진', 'color' : '흰색','maker' : '현대' },
#           '222가2222' : {'engine':'휘발유엔진', 'color' : '흰색','maker' : '현대' }}
# # 자동차 관리 ------------------------------------------------------------------------
# for k,v in carDict.items():
#     print(f'첫번째 판매 차량 [{number}]')
#     for subk,subv in v:
#         print(f'-{subk} : {subv}')
# ------------------------------------------------------------------
# 자동차 클래스
# - 역할 : 자동차 관련 데이터와 기능을 모두 저장 관리 클래스
# - 문법
#   class 클래스명 :
#   <--> 코드
# ------------------------------------------------------------------
class Car:
    maker = '현대'

    # 클래스 생성시 필수로 사용되는 메서드
    # 힙 메모리에 속성들의 값을 저장해주는 역할
    def __init__(self,engine,color,number):
        print('__init__')
        # 자동차 클래스 가지는 속성 메모리 힙에 저장
        self.engine = engine
        self.color = color
        self.number = number

    # 자동차의 기능 => 함수형식
    def go(self):
        print(f'{self.number}자동차 전진')

    def go(self):
        print(f'{self.number}자동차 후진')

    def go(self):
        print(f'{self.number}자동차 정지')


# class로 자동차객체 생성------------------------------------------------
mycar=Car('휘발유엔진','흰색','111가1111')
mycar=Car('휘발유엔진','빨간색','222가2222')
