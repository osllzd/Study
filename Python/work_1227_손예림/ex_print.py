'''
출력 가능의 내장 함수 print()
'''
# 1개의 데이터 화면 출력 ------------------------
print(100)

# 2개의 데이터 화면 출력--------------------------
print(100, 200)
print(100, "good luck")

# 여러 개 데이터 화면 출력-------------------------
print("ABc",5.,"1000","Happy new year")
data = print(100, "goodluck")

#데이터가 없는 경우 화면 출력-----------------------
print()

#데이터 출력을 좀 더 편하게 하는 방법들
# => 문자열과 숫자가 섞여있는 경우가 대부분
#[출력] 오늘은 2024년 12월 27일 입니다
print('오늘은 2024년 12월 27일 입니다.')

year = 2024
month = 12
day = 27

print("오늘은" , year,"년" , month, '월' , day, '입니다.' ,sep='')

# 연수를 str에서 적용해서 출력하는 방법 --- (1) '%알파벳1개' : 서식 지정자 방식
# %d ---> 10진수 정수 '당신의 나이는 %d 입니다. ' %age
# %f ---> 실수 '평균이 %f점 입니다.' %avg
# %s ---> 문자열 '당신의 고향은 %s 입니다.' %name
age = 100
avg = 98.4
name = '대구'
print('당신의 나이는 %d입니다.' %age)
print('평균이 %f 점입니다.' %avg)
print('당신의 고향은 %s 입니다.' %name)

print('당신의 나이는 %d세, 평균은%f, 고향은 %s 이군요.' %(age,avg,name))

#변수를 str에 적용해서 출력하는 방법 --- (2) f'{변수명} ' f-스트링방식
print(f'당신의 나이는 {age}세 입니다.')

#---------------------------------------------------
#[실습1] = 본인 이름, 전공, 나이를 메모리 저장하기
#---------------------------------------------------

name = '손예림'
major = '중어중문'
age = 23

print('이름: ', name)
print('전공: ', major)
print('나이: ', age)

#---------------------------------------------------------
#특별한 의미를 가진 문자 조합 => 이스케이프 문자
# \ + 알파벳 1개
# \n => new line 약자 줄바꿈
# \t=> tab 약자 키보드 텝키 만큼 간격
#---------------------------------------------------------

print(f'이름: {name}\n전공: {major}\n나이: {age}세')

#---------------------------------------------------------
#print()함수에서 데이터 화면 출력 후 끝에 추가하는 문자 지정
# - 기본: 줄바꿈 이스케이프 문자 \n
# - 변경: sep 매개변수 => 여러 개 데이터를 화면에 보기좋게 분리시켜주는 방법 설정
#        end 매개변수 => 화면 출력 후 원하는 문자를 지정 가능
#---------------------------------------------------------
print("홍", "길동")
print("홍" , "길동" , "의적" , sep='☆')

print("A",end='')
print("B",end='***')
print("C")

#-------------------------------------
# [실습2]- 아래와 같이 출력이 되도록 코드를 작성하시오
# 단 print 함수는 1개만 사용
#           ABCDEFG
#           123456789
#           ABCDEFG
#---------------------------------------
# 방법 1. 이스케이프문자 사용
print("ABCDEFG\n123456789\nABCDEFG")

print('-'*30)

# 방법 2. print()함수의 sep
print("ABCDEFG",123456789,"ABCDEFG", sep='\n')
